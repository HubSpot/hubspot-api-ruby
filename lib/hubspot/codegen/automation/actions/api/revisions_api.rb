=begin
#Custom Workflow Actions

#Create custom workflow actions

The version of the OpenAPI document: v4

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.1

=end

require 'cgi'

module Hubspot
  module Automation
    module Actions
      class RevisionsApi
        attr_accessor :api_client

        def initialize(api_client = ApiClient.default)
          @api_client = api_client
        end
        # Get a revision for a custom action
        # Returns the given version of a custom workflow action.
        # @param definition_id [String] The ID of the custom workflow action.
        # @param revision_id [String] The version of the custom workflow action.
        # @param app_id [Integer] 
        # @param [Hash] opts the optional parameters
        # @return [ActionRevision]
        def get_by_id(definition_id, revision_id, app_id, opts = {})
          data, _status_code, _headers = get_by_id_with_http_info(definition_id, revision_id, app_id, opts)
          data
        end

        # Get a revision for a custom action
        # Returns the given version of a custom workflow action.
        # @param definition_id [String] The ID of the custom workflow action.
        # @param revision_id [String] The version of the custom workflow action.
        # @param app_id [Integer] 
        # @param [Hash] opts the optional parameters
        # @return [Array<(ActionRevision, Integer, Hash)>] ActionRevision data, response status code and response headers
        def get_by_id_with_http_info(definition_id, revision_id, app_id, opts = {})
          if @api_client.config.debugging
            @api_client.config.logger.debug 'Calling API: RevisionsApi.get_by_id ...'
          end
          # verify the required parameter 'definition_id' is set
          if @api_client.config.client_side_validation && definition_id.nil?
            fail ArgumentError, "Missing the required parameter 'definition_id' when calling RevisionsApi.get_by_id"
          end
          # verify the required parameter 'revision_id' is set
          if @api_client.config.client_side_validation && revision_id.nil?
            fail ArgumentError, "Missing the required parameter 'revision_id' when calling RevisionsApi.get_by_id"
          end
          # verify the required parameter 'app_id' is set
          if @api_client.config.client_side_validation && app_id.nil?
            fail ArgumentError, "Missing the required parameter 'app_id' when calling RevisionsApi.get_by_id"
          end
          # resource path
          local_var_path = '/automation/v4/actions/{appId}/{definitionId}/revisions/{revisionId}'.sub('{' + 'definitionId' + '}', CGI.escape(definition_id.to_s)).sub('{' + 'revisionId' + '}', CGI.escape(revision_id.to_s)).sub('{' + 'appId' + '}', CGI.escape(app_id.to_s))

          # query parameters
          query_params = opts[:query_params] || {}

          # header parameters
          header_params = opts[:header_params] || {}
          # HTTP header 'Accept' (if needed)
          header_params['Accept'] = @api_client.select_header_accept(['application/json', '*/*'])

          # form parameters
          form_params = opts[:form_params] || {}

          # http body (model)
          post_body = opts[:debug_body]

          # return_type
          return_type = opts[:debug_return_type] || 'ActionRevision'

          # auth_names
          auth_names = opts[:debug_auth_names] || ['developer_hapikey']

          new_options = opts.merge(
            :operation => :"RevisionsApi.get_by_id",
            :header_params => header_params,
            :query_params => query_params,
            :form_params => form_params,
            :body => post_body,
            :auth_names => auth_names,
            :return_type => return_type
          )

          data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
          if @api_client.config.debugging
            @api_client.config.logger.debug "API called: RevisionsApi#get_by_id\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
          end
          return data, status_code, headers
        end

        # Get all revisions for a custom action
        # Returns a list of revisions for a custom workflow action.
        # @param definition_id [String] The ID of the custom workflow action
        # @param app_id [Integer] 
        # @param [Hash] opts the optional parameters
        # @option opts [Integer] :limit Maximum number of results per page.
        # @option opts [String] :after The paging cursor token of the last successfully read resource will be returned as the &#x60;paging.next.after&#x60; JSON property of a paged response containing more results.
        # @return [CollectionResponseActionRevisionForwardPaging]
        def get_page(definition_id, app_id, opts = {})
          data, _status_code, _headers = get_page_with_http_info(definition_id, app_id, opts)
          data
        end

        # Get all revisions for a custom action
        # Returns a list of revisions for a custom workflow action.
        # @param definition_id [String] The ID of the custom workflow action
        # @param app_id [Integer] 
        # @param [Hash] opts the optional parameters
        # @option opts [Integer] :limit Maximum number of results per page.
        # @option opts [String] :after The paging cursor token of the last successfully read resource will be returned as the &#x60;paging.next.after&#x60; JSON property of a paged response containing more results.
        # @return [Array<(CollectionResponseActionRevisionForwardPaging, Integer, Hash)>] CollectionResponseActionRevisionForwardPaging data, response status code and response headers
        def get_page_with_http_info(definition_id, app_id, opts = {})
          if @api_client.config.debugging
            @api_client.config.logger.debug 'Calling API: RevisionsApi.get_page ...'
          end
          # verify the required parameter 'definition_id' is set
          if @api_client.config.client_side_validation && definition_id.nil?
            fail ArgumentError, "Missing the required parameter 'definition_id' when calling RevisionsApi.get_page"
          end
          # verify the required parameter 'app_id' is set
          if @api_client.config.client_side_validation && app_id.nil?
            fail ArgumentError, "Missing the required parameter 'app_id' when calling RevisionsApi.get_page"
          end
          # resource path
          local_var_path = '/automation/v4/actions/{appId}/{definitionId}/revisions'.sub('{' + 'definitionId' + '}', CGI.escape(definition_id.to_s)).sub('{' + 'appId' + '}', CGI.escape(app_id.to_s))

          # query parameters
          query_params = opts[:query_params] || {}
          query_params[:'limit'] = opts[:'limit'] if !opts[:'limit'].nil?
          query_params[:'after'] = opts[:'after'] if !opts[:'after'].nil?

          # header parameters
          header_params = opts[:header_params] || {}
          # HTTP header 'Accept' (if needed)
          header_params['Accept'] = @api_client.select_header_accept(['application/json', '*/*'])

          # form parameters
          form_params = opts[:form_params] || {}

          # http body (model)
          post_body = opts[:debug_body]

          # return_type
          return_type = opts[:debug_return_type] || 'CollectionResponseActionRevisionForwardPaging'

          # auth_names
          auth_names = opts[:debug_auth_names] || ['developer_hapikey']

          new_options = opts.merge(
            :operation => :"RevisionsApi.get_page",
            :header_params => header_params,
            :query_params => query_params,
            :form_params => form_params,
            :body => post_body,
            :auth_names => auth_names,
            :return_type => return_type
          )

          data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
          if @api_client.config.debugging
            @api_client.config.logger.debug "API called: RevisionsApi#get_page\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
          end
          return data, status_code, headers
        end
      end
    end
  end
end
