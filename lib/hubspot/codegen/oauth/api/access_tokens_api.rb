=begin
#OAuthService

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.1

=end

require 'cgi'

module Hubspot
  module OAuth
    class AccessTokensApi
      attr_accessor :api_client

      def initialize(api_client = ApiClient.default)
        @api_client = api_client
      end
      # @param token [String] 
      # @param [Hash] opts the optional parameters
      # @return [AccessTokenInfoResponse]
      def get_access_token(token, opts = {})
        data, _status_code, _headers = get_access_token_with_http_info(token, opts)
        data
      end

      # @param token [String] 
      # @param [Hash] opts the optional parameters
      # @return [Array<(AccessTokenInfoResponse, Integer, Hash)>] AccessTokenInfoResponse data, response status code and response headers
      def get_access_token_with_http_info(token, opts = {})
        if @api_client.config.debugging
          @api_client.config.logger.debug 'Calling API: AccessTokensApi.get_access_token ...'
        end
        # verify the required parameter 'token' is set
        if @api_client.config.client_side_validation && token.nil?
          fail ArgumentError, "Missing the required parameter 'token' when calling AccessTokensApi.get_access_token"
        end
        # resource path
        local_var_path = '/oauth/v1/access-tokens/{token}'.sub('{' + 'token' + '}', CGI.escape(token.to_s))

        # query parameters
        query_params = opts[:query_params] || {}

        # header parameters
        header_params = opts[:header_params] || {}
        # HTTP header 'Accept' (if needed)
        header_params['Accept'] = @api_client.select_header_accept(['application/json', '*/*'])

        # form parameters
        form_params = opts[:form_params] || {}

        # http body (model)
        post_body = opts[:debug_body]

        # return_type
        return_type = opts[:debug_return_type] || 'AccessTokenInfoResponse'

        # auth_names
        auth_names = opts[:debug_auth_names] || []

        new_options = opts.merge(
          :operation => :"AccessTokensApi.get_access_token",
          :header_params => header_params,
          :query_params => query_params,
          :form_params => form_params,
          :body => post_body,
          :auth_names => auth_names,
          :return_type => return_type
        )

        data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
        if @api_client.config.debugging
          @api_client.config.logger.debug "API called: AccessTokensApi#get_access_token\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
        end
        return data, status_code, headers
      end
    end
  end
end
