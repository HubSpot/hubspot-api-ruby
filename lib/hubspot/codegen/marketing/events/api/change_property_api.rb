=begin
#Marketing Events

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v3

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.1

=end

require 'cgi'

module Hubspot
  module Marketing
    module Events
      class ChangePropertyApi
        attr_accessor :api_client

        def initialize(api_client = ApiClient.default)
          @api_client = api_client
        end
        # Mark a marketing event as cancelled
        # Mark a marketing event as cancelled.
        # @param external_event_id [String] The id of the marketing event in the external event application
        # @param external_account_id [String] The accountId that is associated with this marketing event in the external event application
        # @param [Hash] opts the optional parameters
        # @return [MarketingEventDefaultResponse]
        def cancel(external_event_id, external_account_id, opts = {})
          data, _status_code, _headers = cancel_with_http_info(external_event_id, external_account_id, opts)
          data
        end

        # Mark a marketing event as cancelled
        # Mark a marketing event as cancelled.
        # @param external_event_id [String] The id of the marketing event in the external event application
        # @param external_account_id [String] The accountId that is associated with this marketing event in the external event application
        # @param [Hash] opts the optional parameters
        # @return [Array<(MarketingEventDefaultResponse, Integer, Hash)>] MarketingEventDefaultResponse data, response status code and response headers
        def cancel_with_http_info(external_event_id, external_account_id, opts = {})
          if @api_client.config.debugging
            @api_client.config.logger.debug 'Calling API: ChangePropertyApi.cancel ...'
          end
          # verify the required parameter 'external_event_id' is set
          if @api_client.config.client_side_validation && external_event_id.nil?
            fail ArgumentError, "Missing the required parameter 'external_event_id' when calling ChangePropertyApi.cancel"
          end
          # verify the required parameter 'external_account_id' is set
          if @api_client.config.client_side_validation && external_account_id.nil?
            fail ArgumentError, "Missing the required parameter 'external_account_id' when calling ChangePropertyApi.cancel"
          end
          # resource path
          local_var_path = '/marketing/v3/marketing-events/events/{externalEventId}/cancel'.sub('{' + 'externalEventId' + '}', CGI.escape(external_event_id.to_s))

          # query parameters
          query_params = opts[:query_params] || {}
          query_params[:'externalAccountId'] = external_account_id

          # header parameters
          header_params = opts[:header_params] || {}
          # HTTP header 'Accept' (if needed)
          header_params['Accept'] = @api_client.select_header_accept(['application/json', '*/*'])

          # form parameters
          form_params = opts[:form_params] || {}

          # http body (model)
          post_body = opts[:debug_body]

          # return_type
          return_type = opts[:debug_return_type] || 'MarketingEventDefaultResponse'

          # auth_names
          auth_names = opts[:debug_auth_names] || ['oauth2']

          new_options = opts.merge(
            :operation => :"ChangePropertyApi.cancel",
            :header_params => header_params,
            :query_params => query_params,
            :form_params => form_params,
            :body => post_body,
            :auth_names => auth_names,
            :return_type => return_type
          )

          data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
          if @api_client.config.debugging
            @api_client.config.logger.debug "API called: ChangePropertyApi#cancel\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
          end
          return data, status_code, headers
        end

        # Mark a marketing event as completed
        # Mark a marketing event as completed
        # @param external_event_id [String] The id of the marketing event in the external event application.
        # @param external_account_id [String] The accountId that is associated with this marketing event in the external event application.
        # @param marketing_event_complete_request_params [MarketingEventCompleteRequestParams] 
        # @param [Hash] opts the optional parameters
        # @return [MarketingEventDefaultResponse]
        def complete(external_event_id, external_account_id, marketing_event_complete_request_params, opts = {})
          data, _status_code, _headers = complete_with_http_info(external_event_id, external_account_id, marketing_event_complete_request_params, opts)
          data
        end

        # Mark a marketing event as completed
        # Mark a marketing event as completed
        # @param external_event_id [String] The id of the marketing event in the external event application.
        # @param external_account_id [String] The accountId that is associated with this marketing event in the external event application.
        # @param marketing_event_complete_request_params [MarketingEventCompleteRequestParams] 
        # @param [Hash] opts the optional parameters
        # @return [Array<(MarketingEventDefaultResponse, Integer, Hash)>] MarketingEventDefaultResponse data, response status code and response headers
        def complete_with_http_info(external_event_id, external_account_id, marketing_event_complete_request_params, opts = {})
          if @api_client.config.debugging
            @api_client.config.logger.debug 'Calling API: ChangePropertyApi.complete ...'
          end
          # verify the required parameter 'external_event_id' is set
          if @api_client.config.client_side_validation && external_event_id.nil?
            fail ArgumentError, "Missing the required parameter 'external_event_id' when calling ChangePropertyApi.complete"
          end
          # verify the required parameter 'external_account_id' is set
          if @api_client.config.client_side_validation && external_account_id.nil?
            fail ArgumentError, "Missing the required parameter 'external_account_id' when calling ChangePropertyApi.complete"
          end
          # verify the required parameter 'marketing_event_complete_request_params' is set
          if @api_client.config.client_side_validation && marketing_event_complete_request_params.nil?
            fail ArgumentError, "Missing the required parameter 'marketing_event_complete_request_params' when calling ChangePropertyApi.complete"
          end
          # resource path
          local_var_path = '/marketing/v3/marketing-events/events/{externalEventId}/complete'.sub('{' + 'externalEventId' + '}', CGI.escape(external_event_id.to_s))

          # query parameters
          query_params = opts[:query_params] || {}
          query_params[:'externalAccountId'] = external_account_id

          # header parameters
          header_params = opts[:header_params] || {}
          # HTTP header 'Accept' (if needed)
          header_params['Accept'] = @api_client.select_header_accept(['application/json', '*/*'])
          # HTTP header 'Content-Type'
          content_type = @api_client.select_header_content_type(['application/json'])
          if !content_type.nil?
              header_params['Content-Type'] = content_type
          end

          # form parameters
          form_params = opts[:form_params] || {}

          # http body (model)
          post_body = opts[:debug_body] || @api_client.object_to_http_body(marketing_event_complete_request_params)

          # return_type
          return_type = opts[:debug_return_type] || 'MarketingEventDefaultResponse'

          # auth_names
          auth_names = opts[:debug_auth_names] || ['oauth2']

          new_options = opts.merge(
            :operation => :"ChangePropertyApi.complete",
            :header_params => header_params,
            :query_params => query_params,
            :form_params => form_params,
            :body => post_body,
            :auth_names => auth_names,
            :return_type => return_type
          )

          data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
          if @api_client.config.debugging
            @api_client.config.logger.debug "API called: ChangePropertyApi#complete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
          end
          return data, status_code, headers
        end
      end
    end
  end
end
