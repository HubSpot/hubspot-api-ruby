=begin
#Marketing Events Extension

#These APIs allow you to interact with HubSpot's Marketing Events Extension. It allows you to: * Create, Read or update Marketing Event information in HubSpot * Specify whether a HubSpot contact has registered, attended or cancelled a registration to a Marketing Event. * Specify a URL that can be called to get the details of a Marketing Event. 

The version of the OpenAPI document: v3

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'cgi'

module Hubspot
  module Marketing
    module Events
      class SearchApi
        attr_accessor :api_client

        def initialize(api_client = ApiClient.default)
          @api_client = api_client
        end
        # Search for marketing events
        # Search for marketing events that have an event id that starts with the query string
        # @param q [String] The partial event id to search for
        # @param [Hash] opts the optional parameters
        # @return [CollectionResponseMarketingEventExternalUniqueIdentifierNoPaging]
        def do_search(q, opts = {})
          data, _status_code, _headers = do_search_with_http_info(q, opts)
          data
        end

        # Search for marketing events
        # Search for marketing events that have an event id that starts with the query string
        # @param q [String] The partial event id to search for
        # @param [Hash] opts the optional parameters
        # @return [Array<(CollectionResponseMarketingEventExternalUniqueIdentifierNoPaging, Integer, Hash)>] CollectionResponseMarketingEventExternalUniqueIdentifierNoPaging data, response status code and response headers
        def do_search_with_http_info(q, opts = {})
          if @api_client.config.debugging
            @api_client.config.logger.debug 'Calling API: SearchApi.do_search ...'
          end
          # verify the required parameter 'q' is set
          if @api_client.config.client_side_validation && q.nil?
            fail ArgumentError, "Missing the required parameter 'q' when calling SearchApi.do_search"
          end
          # resource path
          local_var_path = '/marketing/v3/marketing-events/events/search'

          # query parameters
          query_params = opts[:query_params] || {}
          query_params[:'q'] = q

          # header parameters
          header_params = opts[:header_params] || {}
          # HTTP header 'Accept' (if needed)
          header_params['Accept'] = @api_client.select_header_accept(['application/json', '*/*'])

          # form parameters
          form_params = opts[:form_params] || {}

          # http body (model)
          post_body = opts[:body] 

          # return_type
          return_type = opts[:return_type] || 'CollectionResponseMarketingEventExternalUniqueIdentifierNoPaging' 

          # auth_names
          auth_names = opts[:auth_names] || ['hapikey', 'oauth2']

          new_options = opts.merge(
            :header_params => header_params,
            :query_params => query_params,
            :form_params => form_params,
            :body => post_body,
            :auth_names => auth_names,
            :return_type => return_type
          )

          data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
          if @api_client.config.debugging
            @api_client.config.logger.debug "API called: SearchApi#do_search\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
          end
          return data, status_code, headers
        end
      end
    end
  end
end
