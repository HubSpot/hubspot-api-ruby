=begin
#Associations

#Associations define the relationships between objects in HubSpot. These endpoints allow you to create, read, and remove associations.

The version of the OpenAPI document: v3

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.1

=end

require 'cgi'

module Hubspot
  module Crm
    module Associations
      class TypesApi
        attr_accessor :api_client

        def initialize(api_client = ApiClient.default)
          @api_client = api_client
        end
        # List association types
        # List all the valid association types available between two object types
        # @param from_object_type [String] 
        # @param to_object_type [String] 
        # @param [Hash] opts the optional parameters
        # @return [CollectionResponsePublicAssociationDefiniton]
        def get_all(from_object_type, to_object_type, opts = {})
          data, _status_code, _headers = get_all_with_http_info(from_object_type, to_object_type, opts)
          data
        end

        # List association types
        # List all the valid association types available between two object types
        # @param from_object_type [String] 
        # @param to_object_type [String] 
        # @param [Hash] opts the optional parameters
        # @return [Array<(CollectionResponsePublicAssociationDefiniton, Integer, Hash)>] CollectionResponsePublicAssociationDefiniton data, response status code and response headers
        def get_all_with_http_info(from_object_type, to_object_type, opts = {})
          if @api_client.config.debugging
            @api_client.config.logger.debug 'Calling API: TypesApi.get_all ...'
          end
          # verify the required parameter 'from_object_type' is set
          if @api_client.config.client_side_validation && from_object_type.nil?
            fail ArgumentError, "Missing the required parameter 'from_object_type' when calling TypesApi.get_all"
          end
          # verify the required parameter 'to_object_type' is set
          if @api_client.config.client_side_validation && to_object_type.nil?
            fail ArgumentError, "Missing the required parameter 'to_object_type' when calling TypesApi.get_all"
          end
          # resource path
          local_var_path = '/crm/v3/associations/{fromObjectType}/{toObjectType}/types'.sub('{' + 'fromObjectType' + '}', CGI.escape(from_object_type.to_s)).sub('{' + 'toObjectType' + '}', CGI.escape(to_object_type.to_s))

          # query parameters
          query_params = opts[:query_params] || {}

          # header parameters
          header_params = opts[:header_params] || {}
          # HTTP header 'Accept' (if needed)
          header_params['Accept'] = @api_client.select_header_accept(['application/json', '*/*'])

          # form parameters
          form_params = opts[:form_params] || {}

          # http body (model)
          post_body = opts[:debug_body]

          # return_type
          return_type = opts[:debug_return_type] || 'CollectionResponsePublicAssociationDefiniton'

          # auth_names
          auth_names = opts[:debug_auth_names] || ['hapikey', 'oauth2']

          new_options = opts.merge(
            :operation => :"TypesApi.get_all",
            :header_params => header_params,
            :query_params => query_params,
            :form_params => form_params,
            :body => post_body,
            :auth_names => auth_names,
            :return_type => return_type
          )

          data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
          if @api_client.config.debugging
            @api_client.config.logger.debug "API called: TypesApi#get_all\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
          end
          return data, status_code, headers
        end
      end
    end
  end
end
