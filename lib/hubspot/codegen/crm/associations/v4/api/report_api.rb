=begin
#Associations

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v4

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.1

=end

require 'cgi'

module Hubspot
  module Crm
    module Associations
      module V4
        class ReportApi
          attr_accessor :api_client

          def initialize(api_client = ApiClient.default)
            @api_client = api_client
          end
          # Report
          # Requests a report of all objects in the portal which have a high usage of associations
          # @param user_id [Integer] 
          # @param [Hash] opts the optional parameters
          # @return [ReportCreationResponse]
          def request(user_id, opts = {})
            data, _status_code, _headers = request_with_http_info(user_id, opts)
            data
          end

          # Report
          # Requests a report of all objects in the portal which have a high usage of associations
          # @param user_id [Integer] 
          # @param [Hash] opts the optional parameters
          # @return [Array<(ReportCreationResponse, Integer, Hash)>] ReportCreationResponse data, response status code and response headers
          def request_with_http_info(user_id, opts = {})
            if @api_client.config.debugging
              @api_client.config.logger.debug 'Calling API: ReportApi.request ...'
            end
            # verify the required parameter 'user_id' is set
            if @api_client.config.client_side_validation && user_id.nil?
              fail ArgumentError, "Missing the required parameter 'user_id' when calling ReportApi.request"
            end
            # resource path
            local_var_path = '/crm/v4/associations/usage/high-usage-report/{userId}'.sub('{' + 'userId' + '}', CGI.escape(user_id.to_s))

            # query parameters
            query_params = opts[:query_params] || {}

            # header parameters
            header_params = opts[:header_params] || {}
            # HTTP header 'Accept' (if needed)
            header_params['Accept'] = @api_client.select_header_accept(['application/json', '*/*'])

            # form parameters
            form_params = opts[:form_params] || {}

            # http body (model)
            post_body = opts[:debug_body]

            # return_type
            return_type = opts[:debug_return_type] || 'ReportCreationResponse'

            # auth_names
            auth_names = opts[:debug_auth_names] || ['oauth2']

            new_options = opts.merge(
              :operation => :"ReportApi.request",
              :header_params => header_params,
              :query_params => query_params,
              :form_params => form_params,
              :body => post_body,
              :auth_names => auth_names,
              :return_type => return_type
            )

            data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
            if @api_client.config.debugging
              @api_client.config.logger.debug "API called: ReportApi#request\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
            end
            return data, status_code, headers
          end
        end
      end
    end
  end
end
