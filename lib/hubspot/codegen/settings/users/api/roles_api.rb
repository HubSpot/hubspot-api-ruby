=begin
#Users

#Add, manage, and remove users from your account

The version of the OpenAPI document: v3

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'cgi'

module Hubspot
  module Settings
    module Users
      class RolesApi
        attr_accessor :api_client

        def initialize(api_client = ApiClient.default)
          @api_client = api_client
        end
        # Retrieves the roles on an account
        # Retrieves the roles on an account
        # @param [Hash] opts the optional parameters
        # @return [CollectionResponsePublicPermissionSetNoPaging]
        def get_all(opts = {})
          data, _status_code, _headers = get_all_with_http_info(opts)
          data
        end

        # Retrieves the roles on an account
        # Retrieves the roles on an account
        # @param [Hash] opts the optional parameters
        # @return [Array<(CollectionResponsePublicPermissionSetNoPaging, Integer, Hash)>] CollectionResponsePublicPermissionSetNoPaging data, response status code and response headers
        def get_all_with_http_info(opts = {})
          if @api_client.config.debugging
            @api_client.config.logger.debug 'Calling API: RolesApi.get_all ...'
          end
          # resource path
          local_var_path = '/settings/v3/users/roles'

          # query parameters
          query_params = opts[:query_params] || {}

          # header parameters
          header_params = opts[:header_params] || {}
          # HTTP header 'Accept' (if needed)
          header_params['Accept'] = @api_client.select_header_accept(['application/json', '*/*'])

          # form parameters
          form_params = opts[:form_params] || {}

          # http body (model)
          post_body = opts[:body] 

          # return_type
          return_type = opts[:return_type] || 'CollectionResponsePublicPermissionSetNoPaging' 

          # auth_names
          auth_names = opts[:auth_names] || ['oauth2']

          new_options = opts.merge(
            :header_params => header_params,
            :query_params => query_params,
            :form_params => form_params,
            :body => post_body,
            :auth_names => auth_names,
            :return_type => return_type
          )

          data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
          if @api_client.config.debugging
            @api_client.config.logger.debug "API called: RolesApi#get_all\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
          end
          return data, status_code, headers
        end
      end
    end
  end
end
