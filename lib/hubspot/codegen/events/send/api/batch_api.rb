=begin
#Events Send Event Completions

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v3

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.1

=end

require 'cgi'

module Hubspot
  module Events
    module Send
      class BatchApi
        attr_accessor :api_client

        def initialize(api_client = ApiClient.default)
          @api_client = api_client
        end
        # Send a batch of event completions
        # Send multiple event completions at once.
        # @param batched_behavioral_event_http_completion_request [BatchedBehavioralEventHttpCompletionRequest] 
        # @param [Hash] opts the optional parameters
        # @return [nil]
        def call_send(batched_behavioral_event_http_completion_request, opts = {})
          call_send_with_http_info(batched_behavioral_event_http_completion_request, opts)
          nil
        end

        # Send a batch of event completions
        # Send multiple event completions at once.
        # @param batched_behavioral_event_http_completion_request [BatchedBehavioralEventHttpCompletionRequest] 
        # @param [Hash] opts the optional parameters
        # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
        def call_send_with_http_info(batched_behavioral_event_http_completion_request, opts = {})
          if @api_client.config.debugging
            @api_client.config.logger.debug 'Calling API: BatchApi.call_send ...'
          end
          # verify the required parameter 'batched_behavioral_event_http_completion_request' is set
          if @api_client.config.client_side_validation && batched_behavioral_event_http_completion_request.nil?
            fail ArgumentError, "Missing the required parameter 'batched_behavioral_event_http_completion_request' when calling BatchApi.call_send"
          end
          # resource path
          local_var_path = '/events/v3/send/batch'

          # query parameters
          query_params = opts[:query_params] || {}

          # header parameters
          header_params = opts[:header_params] || {}
          # HTTP header 'Accept' (if needed)
          header_params['Accept'] = @api_client.select_header_accept(['*/*'])
          # HTTP header 'Content-Type'
          content_type = @api_client.select_header_content_type(['application/json'])
          if !content_type.nil?
              header_params['Content-Type'] = content_type
          end

          # form parameters
          form_params = opts[:form_params] || {}

          # http body (model)
          post_body = opts[:debug_body] || @api_client.object_to_http_body(batched_behavioral_event_http_completion_request)

          # return_type
          return_type = opts[:debug_return_type]

          # auth_names
          auth_names = opts[:debug_auth_names] || ['oauth2']

          new_options = opts.merge(
            :operation => :"BatchApi.call_send",
            :header_params => header_params,
            :query_params => query_params,
            :form_params => form_params,
            :body => post_body,
            :auth_names => auth_names,
            :return_type => return_type
          )

          data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
          if @api_client.config.debugging
            @api_client.config.logger.debug "API called: BatchApi#call_send\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
          end
          return data, status_code, headers
        end
      end
    end
  end
end
