=begin
#FormsExternalService

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v3

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for Hubspot::Marketing::Forms::FormsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'FormsApi' do
  before do
    # run before each test
    @api_instance = Hubspot::Marketing::Forms::FormsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of FormsApi' do
    it 'should create an instance of FormsApi' do
      expect(@api_instance).to be_instance_of(Hubspot::Marketing::Forms::FormsApi)
    end
  end

  # unit tests for archive
  # Archive a form definition
  # Archive a form definition. New submissions will not be accepted and the form definition will be permanently deleted after 3 months.
  # @param form_id The ID of the form to archive.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'archive test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create
  # Create a form
  # Add a new &#x60;hubspot&#x60; form
  # @param form_definition_create_request_base 
  # @param [Hash] opts the optional parameters
  # @return [FormDefinitionBase]
  describe 'create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_by_id
  # Get a form definition
  # Returns a form based on the form ID provided.
  # @param form_id The unique identifier of the form
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :archived Whether to return only results that have been archived.
  # @return [FormDefinitionBase]
  describe 'get_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_page
  # Get a list of forms
  # Returns a list of forms based on the search filters. By default, it returns the first 20 &#x60;hubspot&#x60; forms
  # @param [Hash] opts the optional parameters
  # @option opts [String] :after The paging cursor token of the last successfully read resource will be returned as the &#x60;paging.next.after&#x60; JSON property of a paged response containing more results.
  # @option opts [Integer] :limit The maximum number of results to display per page.
  # @option opts [Boolean] :archived Whether to return only results that have been archived.
  # @option opts [Array<String>] :form_types The form types to be included in the results.
  # @return [CollectionResponseFormDefinitionBaseForwardPaging]
  describe 'get_page test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for replace
  # Update a form definition
  # Update all fields of a hubspot form definition.
  # @param form_id 
  # @param hub_spot_form_definition 
  # @param [Hash] opts the optional parameters
  # @return [FormDefinitionBase]
  describe 'replace test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update
  # Partially update a form definition
  # Update some of the form definition components
  # @param form_id The ID of the form to update.
  # @param hub_spot_form_definition_patch_request 
  # @param [Hash] opts the optional parameters
  # @return [FormDefinitionBase]
  describe 'update test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
