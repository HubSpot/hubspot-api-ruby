=begin
#Blog Post endpoints

#Use these endpoints for interacting with Blog Posts, Blog Authors, and Blog Tags

The version of the OpenAPI document: v3

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for Hubspot::Cms::Blogs::Authors::BlogAuthorsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'BlogAuthorsApi' do
  before do
    # run before each test
    @api_instance = Hubspot::Cms::Blogs::Authors::BlogAuthorsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of BlogAuthorsApi' do
    it 'should create an instance of BlogAuthorsApi' do
      expect(@api_instance).to be_instance_of(Hubspot::Cms::Blogs::Authors::BlogAuthorsApi)
    end
  end

  # unit tests for archive
  # Delete a Blog Author
  # Delete the Blog Author object identified by the id in the path.
  # @param object_id The Blog Author id.
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :archived Whether to return only results that have been archived.
  # @return [nil]
  describe 'archive test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for archive_batch
  # Delete a batch of Blog Authors
  # Delete the Blog Author objects identified in the request body.
  # @param batch_input_string The JSON array of Blog Author ids.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'archive_batch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for attach_to_lang_group
  # Attach a Blog Author to a multi-language group
  # Attach a Blog Author to a multi-language group.
  # @param attach_to_lang_primary_request_v_next The JSON representation of the AttachToLangPrimaryRequest object.
  # @param [Hash] opts the optional parameters
  # @return [Error]
  describe 'attach_to_lang_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create
  # Create a new Blog Author
  # Create a new Blog Author.
  # @param blog_author The JSON representation of a new Blog Author.
  # @param [Hash] opts the optional parameters
  # @return [BlogAuthor]
  describe 'create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_batch
  # Create a batch of Blog Authors
  # Create the Blog Author objects detailed in the request body.
  # @param batch_input_blog_author The JSON array of new Blog Authors to create.
  # @param [Hash] opts the optional parameters
  # @return [BatchResponseBlogAuthor]
  describe 'create_batch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_lang_variation
  # Create a new language variation
  # Create a new language variation from an existing Blog Author.
  # @param blog_author_clone_request_v_next The JSON representation of the ContentLanguageCloneRequest object.
  # @param [Hash] opts the optional parameters
  # @return [BlogAuthor]
  describe 'create_lang_variation test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for detach_from_lang_group
  # Detach a Blog Author from a multi-language group
  # Detach a Blog Author from a multi-language group.
  # @param detach_from_lang_group_request_v_next The JSON representation of the DetachFromLangGroupRequest object.
  # @param [Hash] opts the optional parameters
  # @return [Error]
  describe 'detach_from_lang_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_by_id
  # Retrieve a Blog Author
  # Retrieve the Blog Author object identified by the id in the path.
  # @param object_id The Blog Author id.
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :archived Specifies whether to return deleted Blog Authors. Defaults to &#x60;false&#x60;.
  # @return [BlogAuthor]
  describe 'get_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_page
  # Get all Blog Authors
  # Get the list of blog authors. Supports paging and filtering. This method would be useful for an integration that examined these models and used an external service to suggest edits. 
  # @param [Hash] opts the optional parameters
  # @option opts [DateTime] :created_at Only return Blog Authors created at exactly the specified time.
  # @option opts [DateTime] :created_after Only return Blog Authors created after the specified time.
  # @option opts [DateTime] :created_before Only return Blog Authors created before the specified time.
  # @option opts [DateTime] :updated_at Only return Blog Authors last updated at exactly the specified time.
  # @option opts [DateTime] :updated_after Only return Blog Authors last updated after the specified time.
  # @option opts [DateTime] :updated_before Only return Blog Authors last updated before the specified time.
  # @option opts [Array<String>] :sort Specifies which fields to use for sorting results. Valid fields are &#x60;name&#x60;, &#x60;createdAt&#x60;, &#x60;updatedAt&#x60;, &#x60;createdBy&#x60;, &#x60;updatedBy&#x60;. &#x60;createdAt&#x60; will be used by default.
  # @option opts [String] :after The cursor token value to get the next set of results. You can get this from the &#x60;paging.next.after&#x60; JSON property of a paged response containing more results.
  # @option opts [Integer] :limit The maximum number of results to return. Default is 100.
  # @option opts [Boolean] :archived Specifies whether to return deleted Blog Authors. Defaults to &#x60;false&#x60;.
  # @return [CollectionResponseWithTotalBlogAuthorForwardPaging]
  describe 'get_page test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for read_batch
  # Retrieve a batch of Blog Authors
  # Retrieve the Blog Author objects identified in the request body.
  # @param batch_input_string The JSON array of Blog Author ids.
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :archived Specifies whether to return deleted Blog Authors. Defaults to &#x60;false&#x60;.
  # @return [BatchResponseBlogAuthor]
  describe 'read_batch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_lang_primary
  # Set a new primary language
  # Set a Blog Author as the primary language of a multi-language group.
  # @param set_new_language_primary_request_v_next The JSON representation of the SetNewLanguagePrimaryRequest object.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'set_lang_primary test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update
  # Update a Blog Author
  # Sparse updates a single Blog Author object identified by the id in the path. All the column values need not be specified. Only the that need to be modified can be specified. 
  # @param object_id The Blog Author id.
  # @param blog_author The JSON representation of the updated Blog Author.
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :archived Specifies whether to update deleted Blog Authors. Defaults to &#x60;false&#x60;.
  # @return [BlogAuthor]
  describe 'update test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_batch
  # Update a batch of Blog Authors
  # Update the Blog Author objects identified in the request body.
  # @param batch_input_json_node A JSON array of the JSON representations of the updated Blog Authors.
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :archived Specifies whether to update deleted Blog Authors. Defaults to &#x60;false&#x60;.
  # @return [BatchResponseBlogAuthor]
  describe 'update_batch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_langs
  # Update languages of multi-language group
  # Explicitly set new languages for each Blog Author in a multi-language group.
  # @param update_languages_request_v_next The JSON representation of the UpdateLanguagesRequest object.
  # @param [Hash] opts the optional parameters
  # @return [Error]
  describe 'update_langs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
