=begin
#CMS Source Code

#Endpoints for interacting with files in the CMS Developer File System. These files include HTML templates, CSS, JS, modules, and other assets which are used to create CMS content.

The version of the OpenAPI document: v3

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for Hubspot::Cms::SourceCode::ContentApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ContentApi' do
  before do
    # run before each test
    @api_instance = Hubspot::Cms::SourceCode::ContentApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ContentApi' do
    it 'should create an instance of ContentApi' do
      expect(@api_instance).to be_instance_of(Hubspot::Cms::SourceCode::ContentApi)
    end
  end

  # unit tests for archive
  # Delete a file
  # Deletes the file at the specified path in the specified environment.
  # @param environment The environment of the file (\&quot;draft\&quot; or \&quot;published\&quot;).
  # @param path The file system location of the file.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'archive test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create
  # Create a file
  # Creates a file at the specified path in the specified environment. Accepts multipart/form-data content type. Throws an error if a file already exists at the specified path.
  # @param environment The environment of the file (\&quot;draft\&quot; or \&quot;published\&quot;).
  # @param path The file system location of the file.
  # @param [Hash] opts the optional parameters
  # @option opts [File] :file The file to upload.
  # @return [AssetFileMetadata]
  describe 'create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get
  # Download a file
  # Downloads the byte contents of the file at the specified path in the specified environment.
  # @param environment The environment of the file (\&quot;draft\&quot; or \&quot;published\&quot;).
  # @param path The file system location of the file.
  # @param [Hash] opts the optional parameters
  # @return [Error]
  describe 'get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for replace
  # Create or update a file
  # Upserts a file at the specified path in the specified environment. Accepts multipart/form-data content type.
  # @param environment The environment of the file (\&quot;draft\&quot; or \&quot;published\&quot;).
  # @param path The file system location of the file.
  # @param [Hash] opts the optional parameters
  # @option opts [File] :file The file to upload.
  # @return [AssetFileMetadata]
  describe 'replace test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
