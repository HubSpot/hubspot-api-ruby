=begin
#Users

#Add, manage, and remove users from your account

The version of the OpenAPI document: v3

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for Hubspot::Settings::Users::UsersApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'UsersApi' do
  before do
    # run before each test
    @api_instance = Hubspot::Settings::Users::UsersApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of UsersApi' do
    it 'should create an instance of UsersApi' do
      expect(@api_instance).to be_instance_of(Hubspot::Settings::Users::UsersApi)
    end
  end

  # unit tests for archive
  # Removes a user
  # Removes a user identified by &#x60;userId&#x60;. &#x60;userId&#x60; refers to the user&#39;s ID by default, or optionally email as specified by the &#x60;IdProperty&#x60; query param.
  # @param user_id Identifier of user to delete
  # @param [Hash] opts the optional parameters
  # @option opts [String] :id_property The name of a property with unique user values. Valid values are &#x60;USER_ID&#x60;(default) or &#x60;EMAIL&#x60;
  # @return [nil]
  describe 'archive test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create
  # Adds a user
  # New users will only have minimal permissions, which is contacts-base. A welcome email will prompt them to set a password and log in to HubSpot.
  # @param user_provision_request 
  # @param [Hash] opts the optional parameters
  # @return [PublicUser]
  describe 'create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_by_id
  # Retrieves a user
  # Retrieves a user identified by &#x60;userId&#x60;. &#x60;userId&#x60; refers to the user&#39;s ID by default, or optionally email as specified by the &#x60;IdProperty&#x60; query param.
  # @param user_id Identifier of user to retrieve
  # @param [Hash] opts the optional parameters
  # @option opts [String] :id_property The name of a property with unique user values. Valid values are &#x60;USER_ID&#x60;(default) or &#x60;EMAIL&#x60;
  # @return [PublicUser]
  describe 'get_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_page
  # Retrieves a list of users from an account
  # Retrieves a list of users from an account
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The number of users to retrieve
  # @option opts [String] :after Results will display maximum 100 users per page. Additional results will be on the next page.
  # @return [CollectionResponsePublicUserForwardPaging]
  describe 'get_page test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for replace
  # Modifies a user
  # Modifies a user identified by &#x60;userId&#x60;. &#x60;userId&#x60; refers to the user&#39;s ID by default, or optionally email as specified by the &#x60;IdProperty&#x60; query param.
  # @param user_id Identifier of user to retrieve
  # @param public_user_update 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :id_property The name of a property with unique user values. Valid values are &#x60;USER_ID&#x60;(default) or &#x60;EMAIL&#x60;
  # @return [PublicUser]
  describe 'replace test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
